"use strict";(self.webpackChunkblog_source_2025=self.webpackChunkblog_source_2025||[]).push([[6933],{28317:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"\u7f16\u7a0b\u5f00\u53d1/Java/Burpsuite\u63d2\u4ef6\u5f00\u53d1/\u5b9e\u73b0\u4e3b\u52a8\u548c\u88ab\u52a8\u6f0f\u626b\u529f\u80fd","title":"\u5b9e\u73b0\u4e3b\u52a8\u548c\u88ab\u52a8\u6f0f\u626b\u529f\u80fd","description":"\u5b9e\u73b0\u6548\u679c","source":"@site/docs/03.\u7f16\u7a0b\u5f00\u53d1/Java/03.Burpsuite\u63d2\u4ef6\u5f00\u53d1/04.\u5b9e\u73b0\u4e3b\u52a8\u548c\u88ab\u52a8\u6f0f\u626b\u529f\u80fd.md","sourceDirName":"03.\u7f16\u7a0b\u5f00\u53d1/Java/03.Burpsuite\u63d2\u4ef6\u5f00\u53d1","slug":"/\u7f16\u7a0b\u5f00\u53d1/Java/Burpsuite\u63d2\u4ef6\u5f00\u53d1/\u5b9e\u73b0\u4e3b\u52a8\u548c\u88ab\u52a8\u6f0f\u626b\u529f\u80fd","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/Burpsuite\u63d2\u4ef6\u5f00\u53d1/\u5b9e\u73b0\u4e3b\u52a8\u548c\u88ab\u52a8\u6f0f\u626b\u529f\u80fd","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"d4m1ts","lastUpdatedAt":1749874405000,"sidebarPosition":4,"frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"\u53f3\u952e\u83dc\u5355\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/Burpsuite\u63d2\u4ef6\u5f00\u53d1/\u53f3\u952e\u83dc\u5355\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd"},"next":{"title":"\u589e\u52a0\u975e\u9884\u671fPayload\u63d2\u5165\u70b9","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/Burpsuite\u63d2\u4ef6\u5f00\u53d1/\u589e\u52a0\u975e\u9884\u671fPayload\u63d2\u5165\u70b9"}}');var i=s(74848),r=s(28453);const a={},c=void 0,u={},p=[{value:"\u5b9e\u73b0\u6548\u679c",id:"\u5b9e\u73b0\u6548\u679c",level:2},{value:"\u5b9e\u73b0\u4ee3\u7801",id:"\u5b9e\u73b0\u4ee3\u7801",level:2},{value:"\u5b9e\u73b0\u6d4b\u8bd5",id:"\u5b9e\u73b0\u6d4b\u8bd5",level:2},{value:"\u6269\u5c55\u603b\u7ed3",id:"\u6269\u5c55\u603b\u7ed3",level:2},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u5b9e\u73b0\u6548\u679c",children:"\u5b9e\u73b0\u6548\u679c"}),"\n",(0,i.jsx)(n.p,{children:"\u5b9e\u73b0\u88ab\u52a8\u6f0f\u626b\u548c\u4e3b\u52a8\u6f0f\u626b\uff0c\u5e76\u5728\u9762\u677f\u6807\u8bb0\u5c55\u793a\u6f0f\u6d1e\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u8fdb\u884c\u88ab\u52a8\u626b\u63cf\u548c\u4e3b\u52a8\u626b\u63cf\uff0c\u5982\u679c\u5185\u5bb9\u4e2d\u5b58\u5728",(0,i.jsx)(n.code,{children:"d4m1ts"}),"\uff0c\u5c31\u5224\u5b9a\u4e3a\u6f0f\u6d1e\u5b58\u5728\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u6d89\u53ca\u63a5\u53e3\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"IScannerCheck"}),"\n",(0,i.jsx)(n.li,{children:"IScanIssue"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5b9e\u73b0\u4ee3\u7801",children:"\u5b9e\u73b0\u4ee3\u7801"}),"\n",(0,i.jsx)(n.p,{children:"\u521b\u5efa\u9879\u76ee\u8fc7\u7a0b\u7701\u7565\uff0c\u76f4\u63a5\u4ece\u4ee3\u7801\u5165\u624b\uff0c\u4f7f\u7528\u65e7\u7248API\u5f00\u53d1\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package burp;\n\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class BurpExtender implements IBurpExtender, IScannerCheck {\n    // \u56de\u8c03\u5bf9\u8c61\n    private IBurpExtenderCallbacks callbacks;\n    // \u8f85\u52a9\u7c7b\uff0c\u4e00\u822c\u7528\u4e8e\u8f85\u52a9\u5206\u6790\u6570\u636e\u5305\u7ed3\u6784\n    private IExtensionHelpers helpers;\n\n    // \u5b9e\u73b0 IBurpExtender \u63a5\u53e3\u51fd\u6570\n    @Override\n    public void registerExtenderCallbacks(IBurpExtenderCallbacks callbacks) {\n        // \u8bbe\u7f6e\u63d2\u4ef6\u540d\u5b57\n        callbacks.setExtensionName("Demo");\n\n        // callbacks\u5230\u5904\u90fd\u8981\u7528\uff0c\u641e\u6210\u7c7b\u53d8\u91cf\n        this.callbacks = callbacks;\n\n        // \u8f85\u52a9\u7c7b\uff0c\u4e00\u822c\u7528\u4e8e\u8f85\u52a9\u5206\u6790\u6570\u636e\u5305\u7ed3\u6784\uff0c\u7c7b\u53d8\u91cf\u65b9\u4fbf\u5176\u4ed6\u51fd\u6570\u8c03\u7528\n        helpers = callbacks.getHelpers();\n\n        // \u6ce8\u518c ScannerCheck \uff0c\u5fc5\u987b\u8981\u6ce8\u518c\u4e86burp\u6709\u65b0\u6d88\u606f\u624d\u4f1a\u901a\u77e5\u4f60\n        callbacks.registerScannerCheck(this);\n\n    }\n\n    /**\n     * \u88ab\u52a8\u626b\u63cf\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u81ea\u52a8\u626b\u4e00\u904d\n     * \u4e00\u822c\u5efa\u8bae\u4e0d\u8981\u5728\u8fd9\u91cc\u9762\u4e3b\u52a8\u53d1\u8d77\u8bf7\u6c42\n     *\n     * @param baseRequestResponse \u5e94\u8be5\u88ab\u52a8\u626b\u63cf\u7684\u57fa\u672cHTTP\u8bf7\u6c42/\u54cd\u5e94\u3002\n     * @return \u626b\u63cf\u51fa\u7684\u6f0f\u6d1e\n     */\n    @Override\n    public List<IScanIssue> doPassiveScan(IHttpRequestResponse baseRequestResponse) {\n        // \u8fd4\u56de\u7684\u7ed3\u679c\n        List<IScanIssue> result = new ArrayList<>();\n        // \u62ff\u5230\u5f53\u524d\u7684\u54cd\u5e94\n        byte[] response = baseRequestResponse.getResponse();\n        // \u5224\u65ad\u662f\u5426\u5305\u542b\u5173\u952e\u8bcd\n        if (new String(response).contains("d4m1ts")) {\n            // \u6dfb\u52a0\u6f0f\u6d1e\uff1b CustomIssue \u662f\u6211\u81ea\u5df1\u521b\u5efa\u7684\u6f0f\u6d1e\u7c7b\uff0c\u5b9e\u73b0 IScanIssue \u63a5\u53e3\u5373\u53ef\n            result.add(new CustomIssue(\n                    helpers.analyzeRequest(baseRequestResponse).getUrl(),\n                    "\u88ab\u52a8\u626b\u63cf\uff0c\u6f0f\u6d1e\u540d",\n                    0,\n                    "High",\n                    "Certain",\n                    "\u6f0f\u6d1e\u80cc\u666f",\n                    "\u4fee\u590d\u5efa\u8bae\u80cc\u666f",\n                    "\u6f0f\u6d1e\u7ec6\u8282\u3001\u6f0f\u6d1e\u63cf\u8ff0",\n                    "\u4fee\u590d\u5efa\u8bae",\n                    new IHttpRequestResponse[]{baseRequestResponse},\n                    baseRequestResponse.getHttpService()\n            ));\n        }\n        return result;\n    }\n\n    /**\n     * \u4e3b\u52a8\u6f0f\u626b\uff0c\u9700\u8981\u70b9\u51fbBurp\u7684 Do active scan \u624d\u4f1a\u89e6\u53d1\n     *\n     * @param baseRequestResponse \u5e94\u8be5\u4e3b\u52a8\u626b\u63cf\u7684\u57fa\u672cHTTP\u8bf7\u6c42/\u54cd\u5e94\u3002\n     * @param insertionPoint burp\u81ea\u52a8\u5206\u6790\u6570\u636e\u5305\u540e\uff0c\u63d0\u4f9b\u7684payload\u63d2\u5165\u70b9\uff0c\u5982\u6709\u53c2\u6570 a=bbb\uff0c\u90a3\u4e48bbb\u5c31\u662f\u63d2\u5165\u70b9\n     * @return \u626b\u63cf\u51fa\u7684\u6f0f\u6d1e\n     */\n    @Override\n    public List<IScanIssue> doActiveScan(IHttpRequestResponse baseRequestResponse, IScannerInsertionPoint insertionPoint) {\n        // \u8fd4\u56de\u7684\u7ed3\u679c\n        List<IScanIssue> result = new ArrayList<>();\n        // \u8bbe\u7f6e\u63d2\u5165\u70b9\u503c\uff0c\u63d2\u5165\u70b9\u53ef\u53c2\u8003\uff1ahttps://portswigger.net/burp/documentation/scanner/auditing#insertion-points \u4e2d\u6807\u9ec4\u7684\u90e8\u5206\n        byte[] newRequest = insertionPoint.buildRequest("active_test".getBytes());\n        // \u53d1\u8d77\u8bf7\u6c42\n        IHttpRequestResponse newReqResp = callbacks.makeHttpRequest(baseRequestResponse.getHttpService(), newRequest);\n        // \u5224\u65ad\u5185\u5bb9\u662f\u5426\u5305\u542b\u5173\u952e\u8bcd\n        String keyword = "d4m1ts";\n        String newResp = new String(newReqResp.getResponse());\n        if (newResp.contains(keyword)) {\n            // \u51c6\u5907\u9ad8\u4eaed4m1ts\n            List<int[]> responseMarkers = new ArrayList<>();\n            // \u5148\u627e\u5230\u6240\u6709\u7684d4m1ts\u7684\u4f4d\u7f6e\n            int index = newResp.indexOf(keyword);\n            while (index != -1) {\n                int[] position = new int[2];\n                position[0] = index; // \u8d77\u59cb\u4f4d\u7f6e\n                position[1] = index + keyword.length(); // \u7ed3\u675f\u4f4d\u7f6e\n                responseMarkers.add(position);\n                // \u4ece\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7ee7\u7eed\u67e5\u627e\n                index = newResp.indexOf(keyword, index + 1);\n            }\n            // \u518d\u8bbe\u7f6e\u9ad8\u4eae\n            IHttpRequestResponseWithMarkers responseWithMarkers = callbacks.applyMarkers(newReqResp, null, responseMarkers);\n            // \u6dfb\u52a0\u5230\u6f0f\u6d1e\u4e2d\n            CustomIssue customIssue = new CustomIssue(\n                    helpers.analyzeRequest(baseRequestResponse).getUrl(),\n                    "\u4e3b\u52a8\u626b\u63cf\uff0c\u6f0f\u6d1e\u540d",\n                    0,\n                    "High",\n                    "Certain",\n                    "\u6f0f\u6d1e\u80cc\u666f",\n                    "\u4fee\u590d\u5efa\u8bae\u80cc\u666f",\n                    "\u6f0f\u6d1e\u7ec6\u8282\u3001\u6f0f\u6d1e\u63cf\u8ff0",\n                    "\u4fee\u590d\u5efa\u8bae",\n                    new IHttpRequestResponse[]{baseRequestResponse, responseWithMarkers},\n                    baseRequestResponse.getHttpService()\n            );\n            result.add(customIssue);\n            \n            // \u9664\u4e86\u8fd4\u56deissue\u7ed3\u679c\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7callbacks\u6765\u624b\u52a8\u6dfb\u52a0\u6f0f\u6d1e\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4e3b\u88ab\u52a8\u6f0f\u626b\uff08\u4e0d\u5efa\u8bae\uff09\n            // customIssue.issueName = "callbacks\u4e3b\u52a8\u6dfb\u52a0\u6f0f\u6d1e";\n            // callbacks.addScanIssue(customIssue);\n        }\n        return result;\n    }\n\n    /**\n     * \u91cd\u590d\u6f0f\u6d1e\u7684\u5904\u7406\n     *\n     * @param existingIssue An issue that was previously reported by this\n     * Scanner check.\n     * @param newIssue An issue at the same URL path that has been newly\n     * reported by this Scanner check.\n     * @return -1\uff1a\u91cd\u590d\u7684\u5ffd\u7565 0:\u90fd\u6dfb\u52a0\u4e0a 1:\u53ea\u4fdd\u7559\u6700\u65b0\u7684\n     */\n    @Override\n    public int consolidateDuplicateIssues(IScanIssue existingIssue, IScanIssue newIssue) {\n        // \u5982\u679c\u6f0f\u6d1e\u540d\u4e00\u6837\uff0c\u5c31\u5ffd\u7565\u91cd\u590d\u7684\n        if (existingIssue.getIssueName().equals(newIssue.getIssueName()))\n            return -1;\n        else return 0;\n    }\n\n    /**\n     * \u6f0f\u6d1e\u7684\u7ed3\u6784\u6a21\u7248\uff0c\u6240\u6709\u53c2\u6570\u90fd\u81ea\u5b9a\u4e49\n     */\n    private class CustomIssue implements IScanIssue {\n        private URL url;\n        private String issueName;\n        private int issueType;\n        private String severity;\n        private String confidence;\n        private String issueBackground;\n        private String remediationBackground;\n        private String issueDetail;\n        private String remediationDetail;\n        private IHttpRequestResponse[] httpMessages;\n        private IHttpService httpService;\n\n        /**\n         *\n         * @param url \u6f0f\u6d1e\u5730\u5740\n         * @param issueName \u6f0f\u6d1e\u540d\n         * @param issueType \u6f0f\u6d1e\u7c7b\u578b?\uff0c\u9ed8\u8ba40\uff0c\u4e0d\u77e5\u9053\u5e72\u5565\u7684\n         * @param severity \u6f0f\u6d1e\u7b49\u7ea7\uff1b"High", "Medium", "Low", "Information" "False positive" 5\u90091\n         * @param confidence \u7f6e\u4fe1\u5ea6\uff0c\u6216\u8005\u8bf4\u6f0f\u6d1e\u5b58\u5728\u7684\u4fe1\u5fc3\uff1b"Certain", "Firm" "Tentative" 3\u90091\n         * @param issueBackground \u6f0f\u6d1e\u80cc\u666f\uff0c\u8bbe\u7f6e\u4e3anull\u4e0d\u663e\u793a\n         * @param remediationBackground \u4fee\u590d\u80cc\u666f\uff0c\u8bbe\u7f6e\u4e3anull\u4e0d\u663e\u793a\n         * @param issueDetail \u6f0f\u6d1e\u63cf\u8ff0\n         * @param remediationDetail \u4fee\u590d\u5efa\u8bae\n         * @param httpMessages \u6f0f\u6d1e\u8bf7\u6c42\n         * @param httpService \u6f0f\u6d1e\u7684httpService\n         */\n        public CustomIssue(URL url, String issueName, int issueType, String severity, String confidence, String issueBackground, String remediationBackground, String issueDetail, String remediationDetail, IHttpRequestResponse[] httpMessages, IHttpService httpService){\n            this.url = url;\n            this.issueName = issueName;\n            this.issueType = issueType;\n            this.severity = severity;\n            this.confidence = confidence;\n            this.issueBackground = issueBackground;\n            this.remediationBackground = remediationBackground;\n            this.issueDetail = issueDetail;\n            this.remediationDetail = remediationDetail;\n            this.httpMessages = httpMessages;\n            this.httpService = httpService;\n        }\n        @Override\n        public URL getUrl() {\n            return url;\n        }\n\n        @Override\n        public String getIssueName() {\n            return issueName;\n        }\n\n        @Override\n        public int getIssueType() {\n            return issueType;\n        }\n\n        @Override\n        public String getSeverity() {\n            return severity;\n        }\n\n        @Override\n        public String getConfidence() {\n            return confidence;\n        }\n\n        @Override\n        public String getIssueBackground() {\n            return issueBackground;\n        }\n\n        @Override\n        public String getRemediationBackground() {\n            return remediationBackground;\n        }\n\n        @Override\n        public String getIssueDetail() {\n            return issueDetail;\n        }\n\n        @Override\n        public String getRemediationDetail() {\n            return remediationDetail;\n        }\n\n        @Override\n        public IHttpRequestResponse[] getHttpMessages() {\n            return httpMessages;\n        }\n\n        @Override\n        public IHttpService getHttpService() {\n            return httpService;\n        }\n    }\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u5b9e\u73b0\u6d4b\u8bd5",children:"\u5b9e\u73b0\u6d4b\u8bd5"}),"\n",(0,i.jsx)(n.p,{children:"\u88ab\u52a8\u626b\u63cf"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240921\u4e0b\u534834152648",src:s(69584).A+"",width:"2158",height:"1448"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e3b\u52a8\u626b\u63cf\u4e0b\u53d1"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240921\u4e0b\u534834452054",src:s(60338).A+"",width:"1182",height:"450"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e3b\u52a8\u626b\u63cf\u7ed3\u679c"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240921\u4e0b\u534835016934",src:s(79788).A+"",width:"1904",height:"1540"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e3b\u52a8\u53d1\u9001\u7684\u8bf7\u6c42\uff0c\u53ef\u5728 ",(0,i.jsx)(n.code,{children:"Insertion point"})," \u770b\u5230\u6f0f\u6d1e\u53c2\u6570"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240921\u4e0b\u534835808978",src:s(74007).A+"",width:"2576",height:"958"})}),"\n",(0,i.jsx)(n.p,{children:"\u54cd\u5e94\u7ed3\u679c\u9ad8\u4eae"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image-20240921\u4e0b\u534835142952",src:s(91938).A+"",width:"1934",height:"1498"})}),"\n",(0,i.jsx)(n.h2,{id:"\u6269\u5c55\u603b\u7ed3",children:"\u6269\u5c55\u603b\u7ed3"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5b9e\u73b0 ",(0,i.jsx)(n.code,{children:"IScannerCheck"})," \u63a5\u53e3\u5373\u53ef\uff0c\u6dfb\u52a0\u6f0f\u6d1e\u7684\u65f6\u81ea\u5b9a\u4e49\u7684\u6f0f\u6d1e\u7c7b\u9700\u8981\u5b9e\u73b0 ",(0,i.jsx)(n.code,{children:"IScanIssue"})," \u63a5\u53e3\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u8981\u5728\u6f0f\u6d1e\u9762\u677f\u4e2d\u5c55\u793a\u591a\u4e2a\u8bf7\u6c42\u54cd\u5e94\uff0c\u53ea\u9700\u8981\u518d\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6f0f\u6d1e\u7c7b\u65f6\u7ed9 ",(0,i.jsx)(n.code,{children:"httpMessages"})," \u591a\u653e\u51e0\u4e2a ",(0,i.jsx)(n.code,{children:"IHttpRequestResponse"})," \u5373\u53ef\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u9664\u4e86\u8fd4\u56deissue\u7ed3\u679c\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 ",(0,i.jsx)(n.code,{children:"callbacks.addScanIssue(customIssue);"})," \u6765\u624b\u52a8\u6dfb\u52a0\u6f0f\u6d1e\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4e3b\u88ab\u52a8\u6f0f\u626b\uff08\u4e0d\u5efa\u8bae\uff09\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u53c2\u8003",children:"\u53c2\u8003"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/PortSwigger/example-scanner-checks/blob/master/java/BurpExtender.java",children:"https://github.com/PortSwigger/example-scanner-checks/blob/master/java/BurpExtender.java"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},60338:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-20240921\u4e0b\u534834452054-1022cd9fa1b8ae900525981fd0e1bdcc.png"},69584:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-20240921\u4e0b\u534834152648-49802df2959db145941f9eeaf161c577.png"},74007:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-20240921\u4e0b\u534835808978-d81ea36aa06e6f47b5e21bf07582ca09.png"},79788:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-20240921\u4e0b\u534835016934-46d0cb83d4a2ef4afba1c8bd970972cc.png"},91938:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-20240921\u4e0b\u534835142952-02d5f121f4e070434de00e4a94e47b21.png"}}]);