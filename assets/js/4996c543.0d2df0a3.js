"use strict";(self.webpackChunkblog_source_2025=self.webpackChunkblog_source_2025||[]).push([[3100],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}},89643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"\u7f16\u7a0b\u5f00\u53d1/Java/SpringBoot/Filter","title":"Filter","description":"","source":"@site/docs/03.\u7f16\u7a0b\u5f00\u53d1/Java/01.SpringBoot/02.Filter.md","sourceDirName":"03.\u7f16\u7a0b\u5f00\u53d1/Java/01.SpringBoot","slug":"/\u7f16\u7a0b\u5f00\u53d1/Java/SpringBoot/Filter","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/SpringBoot/Filter","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"d4m1ts","lastUpdatedAt":1748751271000,"sidebarPosition":2,"frontMatter":{},"sidebar":"knowledgeBaseSidebar","previous":{"title":"SpringBoot\u7ed3\u5408Mybatis","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/SpringBoot/SpringBoot\u7ed3\u5408Mybatis"},"next":{"title":"SpringBoot\u7ed3\u5408Elasticsearch","permalink":"/docs/\u7f16\u7a0b\u5f00\u53d1/Java/SpringBoot/SpringBoot\u7ed3\u5408Elasticsearch"}}');var r=n(74848),s=n(28453);const i={},a=void 0,l={},p=[];function c(e){const t={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'package com.xxx.vulnweb.filter;\n\nimport com.xxx.vulnweb.model.ResponseModel;\nimport com.xxx.vulnweb.model.user.UserModel;\nimport com.xxx.vulnweb.util.JsonParseImpl;\nimport jakarta.servlet.*;\nimport jakarta.servlet.http.HttpServletRequest;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.stereotype.Component;\nimport java.io.IOException;\nimport java.util.Objects;\n\n\n@Component\n@Order(1)\npublic class LoginFilter implements Filter {\n    @Autowired\n    ResponseModel responseModel;\n    @Autowired\n    JsonParseImpl jsonParse;\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        // \u7c7b\u578b\u8f6c\u6362\u6210HTTP\u7684\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        // \u767b\u9646\u63a5\u53e3\u4e0d\u9274\u6743\n        if (Objects.equals(request.getRequestURI(), "/login")) {\n            filterChain.doFilter(servletRequest, servletResponse);\n        } else {\n            // \u83b7\u53d6session\u5e76\u8fd4\u56de\u7ed9UserModel\n            UserModel user = (UserModel) request.getSession().getAttribute("info");\n            // \u5982\u679c\u80fd\u8fd4\u56de\u5bf9\u8c61\uff0c\u5219\u8bf4\u660e\u6709\u6743\u9650\u7684\n            if (user != null) {\n                filterChain.doFilter(servletRequest, servletResponse);\n            } else {    // \u65e0\u6743\u9650\u7684\n                servletResponse.setContentType("application/json");\n                responseModel.setCode(401);\n                responseModel.setMsg("Unauthorized");\n                responseModel.setData(null);\n                servletResponse.getOutputStream().write(jsonParse.dumps(responseModel).getBytes());\n            }\n        }\n\n    }\n}\n\n'})})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);